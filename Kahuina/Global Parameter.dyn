{
  "Uuid": "d3729592-126c-4263-96c7-1ee70d6622dc",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Global Parameter",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport math\r\nfrom io import StringIO\r\n\r\nimport Autodesk\r\nimport RevitServices\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, IndependentTag,BuiltInParameter, BuiltInCategory, ElementTransformUtils\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom Autodesk.Revit.DB import Dimension, Line, XYZ, Group, ElementId\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\n\r\n# For Outputting print to watch node\r\noutput = StringIO()\r\nsys.stdout = output\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nactive_view = doc.ActiveView\r\n\r\ndef transaction(func):\r\n    def wrapper(*args, **kwargs):\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n            func(*args, **kwargs)\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n    return wrapper\r\n \r\ndef print_member(obj):\r\n  for i in dir(obj):\r\n      print(i)\r\n\r\ndef get_element(id_str):\r\n   return doc.GetElement(ElementId(id_str))\r\n\r\n\r\ndef set_parameter(element, parameter_name, new_value):\r\n    parameter = element.GetParameters(parameter_name)[0]\r\n    parameter.SetValueString(new_value)\r\n\r\nmode = UnwrapElement(IN[0])\r\n# 2680980\r\n\r\n\r\n\r\n@transaction  \r\ndef start():\r\n  global_parameters = FilteredElementCollector(doc).OfClass(GlobalParameter)\r\n\r\n  collector = FilteredElementCollector(doc).WhereElementIsNotElementType()\r\n  matching_elements = []\r\n\r\n  # Iterate through each element in the collection\r\n  for element in collector:\r\n      param = element.LookupParameter(\"Comments\")\r\n      if not param: continue\r\n\r\n      value = param.AsValueString()\r\n      if not param.IsReadOnly and value and value.startswith(\"GB: \"):\r\n          param_name = value.replace(\"GB:\", \"\").strip()\r\n\r\n          for gpm in global_parameters:\r\n              if gpm.Name == param_name:\r\n                gpm_value = gpm.GetValue().Value\r\n                parameter = element.LookupParameter(\"Elevation from Level\")\r\n\r\n                if param.IsReadOnly: continue\r\n                parameter.Set(gpm_value)\r\n\r\n                print(\"Set: \", element.Name, element.Id, parameter.AsValueString())\r\nstart()\r\n\r\nOUT = output.getvalue()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fcc2dadb55e446e4b19b1ab5954aee9d",
      "Inputs": [
        {
          "Id": "c966fc981cf84a8a81c4fbb929f0becf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44fbb0f5d8434007acceabf8f5f7ba80",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "31e4b45d26524e90bbfaed08606fb621",
      "Inputs": [
        {
          "Id": "9f48e2cf5e0d462a826f164ad816bccf",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4039ae904711421db39ecd5c054201b8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "604038f8b2b747858a4a30b6b5d62172",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7de8319c08ec4b269776da4e5f1cc06c",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    }
  ],
  "Connectors": [
    {
      "Start": "44fbb0f5d8434007acceabf8f5f7ba80",
      "End": "9f48e2cf5e0d462a826f164ad816bccf",
      "Id": "7e5b1504f09a483c8acdf6ac272587e1",
      "IsHidden": "False"
    },
    {
      "Start": "7de8319c08ec4b269776da4e5f1cc06c",
      "End": "c966fc981cf84a8a81c4fbb929f0becf",
      "Id": "60abdcc20101408994f7cacd5377066e",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "fcc2dadb55e446e4b19b1ab5954aee9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 474.96965907985566,
        "Y": 169.14483447341954
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "31e4b45d26524e90bbfaed08606fb621",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 743.11132860661974,
        "Y": 119.32219637520859
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "604038f8b2b747858a4a30b6b5d62172",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 238.17289512393052,
        "Y": 141.13014937880473
      }
    ],
    "Annotations": [
      {
        "Id": "70f81e0f77744b5790316aaee01a1601",
        "Title": "How to Use:\n1. Place a comment in any FamilyInstance you\nwant to control the \"Elevation from Level\" with a\ncomment of \"GB: <Name>\"\n2. GB stands for Global Parameter. The <Name>\nmust match the same name in the Global Parameter window under Manage tab.\n(e.g. GB: Standard Receptacle)\n3. Run the script and it will check every FamilyInstance with that comment and update it's \"Elevation from Level\" paramater to match the Global Parameter.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 420.89465885964682,
        "Top": -65.7725421968754,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c4f23c76bd174fde9668fc8e2161928c",
        "Title": "NOTE: Currently only works with \n\"Elevation from Level\". Tell me if you need other parameters and I'll update it.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 736.8461428995322,
        "Top": -57.160153907536568,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -212.05984377263832,
    "Y": 30.474102502975484,
    "Zoom": 0.98854889960476844
  }
}