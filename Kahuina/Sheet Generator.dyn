{
  "Uuid": "d3729592-126c-4263-96c7-1ee70d6622dc",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Sheet Generator",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "d5c6362afcf8413bafd6e659ff1455e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "475c85ddf0c84f79a65d131ee377ae33",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport math, sys\r\nfrom io import StringIO\r\n\r\nimport Autodesk\r\nimport RevitServices\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, ViewSheet,Viewport, BuiltInCategory, ElementTransformUtils, FamilyInstance\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom Autodesk.Revit.DB import Dimension, Line, XYZ, ViewPlan, ElementId, Electrical\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\n\r\n# For Outputting print to watch node\r\noutput = StringIO()\r\nsys.stdout = output\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nactive_view = doc.ActiveView\r\n\r\ndef transaction(func):\r\n    def wrapper(*args, **kwargs):\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n            func(*args, **kwargs)\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n    return wrapper\r\n\r\ndef print_member(obj):\r\n  for i in dir(obj):\r\n      print(i)\r\n\r\ndef get_element(id):\r\n  if isinstance(id, str) or isinstance(id, int):\r\n    return doc.GetElement(ElementId(id))\r\n  elif isinstance(id, ElementId):\r\n    return doc.GetElement(id)\r\n  return None\r\n\r\ndef get_element_via_parameter(elements, parameter_name, parameter_value):\r\n    result = []\r\n    for el in elements:\r\n        param_ViewType = el.GetParameters(parameter_name)[0]\r\n        if param_ViewType.AsValueString() == parameter_value:\r\n            result.append(el)\r\n            continue\r\n    return result\r\n\r\ndef get_num(str):\r\n  res = ''.join(char for char in str if char.isdigit())\r\n  if res:\r\n    return int(res)\r\n  else: return None\r\ndef is_dependent(view):\r\n  if \"Dependent \" in view.LookupParameter(\"Dependency\").AsValueString():\r\n    return True\r\n  return False\r\ndef get_view_range(view_group, target_view_type, target_family_type, range_value=None):\r\n    result = []\r\n    view_list = FilteredElementCollector(doc).OfClass(ViewPlan).ToElements()\r\n    for view in view_list:\r\n        if view.IsTemplate == True: continue\r\n\r\n        \r\n        if view.LookupParameter(\"View Group\").AsValueString() != view_group: continue\r\n\r\n        if view.LookupParameter(\"View Type\").AsValueString() != target_view_type: continue\r\n\r\n        if view.LookupParameter(\"Type\").AsValueString() != target_family_type: continue\r\n\r\n        if range_value:\r\n          min_range = range_value[0]\r\n          max_range = range_value[1]\r\n\r\n          level = get_num(view.Name)\r\n          if min_range <= level <= max_range:\r\n              result.append(view)\r\n              continue\r\n          \r\n        else:\r\n          result.append(view)\r\n          continue\r\n          \r\n    return result\r\n\r\n\r\n@transaction \r\ndef start():\r\n  view_list = get_view_range(\"Tower A\", \"Presentation Views\", \"Lighting\")\r\n  titleblock_id = ElementId(1941401)\r\n  \r\n  for view in view_list:\r\n    if not is_dependent(view): continue\r\n    print(get_element(view.GetPrimaryViewId()).Name, view.Name)\r\n    # new_sheet = ViewSheet.Create(doc, titleblock_id)\r\n    # break\r\n    # new_sheet.LookupParameter(\"Sheet Group\").Set(\"Unit Plan\")\r\n\r\n    # new_sheet.LookupParameter(\"Sheet Type\").Set(\"Floor A4\")\r\n\r\n    # new_sheet.LookupParameter(\"Sheet Sub-Type\").Set(\"0402 A-2A\")\r\n\r\nstart()\r\n\r\nOUT = output.getvalue()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b6c4443bafad485b8e4285f174d39dcc",
      "Inputs": [
        {
          "Id": "6de3c57c1cd54e139851ea000cf80d8a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff470b3948544122aaf5301ff3110106",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a915be7963014d799dd69faed68204a0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "",
      "Id": "31f423f262e34ffa9a81b812a99d0cb3",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d38b47f15e7346c4b796ecb48514e451",
      "Inputs": [
        {
          "Id": "e17e2880c68c41c98d2b49dc30f0a6fd",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3759bf100f84a559eb0e082f0b04c00",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "475c85ddf0c84f79a65d131ee377ae33",
      "End": "6de3c57c1cd54e139851ea000cf80d8a",
      "Id": "c090597038fe48ff93d7201f38517584",
      "IsHidden": "False"
    },
    {
      "Start": "a915be7963014d799dd69faed68204a0",
      "End": "e17e2880c68c41c98d2b49dc30f0a6fd",
      "Id": "cd68dd1f4b5841e6b4bf2f55d0cdb7e6",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "d5c6362afcf8413bafd6e659ff1455e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1056.4752636003459,
        "Y": -19.727805537157593
      },
      {
        "Name": "Sheet Generator.py",
        "ShowGeometry": true,
        "Id": "b6c4443bafad485b8e4285f174d39dcc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1037.1860277269625,
        "Y": 267.64219781376573
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "31f423f262e34ffa9a81b812a99d0cb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 769.24278243368326,
        "Y": 257.025411929245
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "d38b47f15e7346c4b796ecb48514e451",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1273.5959620223462,
        "Y": 159.71494598609928
      }
    ],
    "Annotations": [],
    "X": -766.59300671312337,
    "Y": 19.710579142602626,
    "Zoom": 0.87854496984933073
  }
}