{
  "Uuid": "cdc60f9d-7ac2-4ec7-9eb6-8aceb0200a80",
  "IsCustomNode": false,
  "Description": "",
  "Name": "View Crop",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport math\r\nfrom io import StringIO\r\n\r\nimport Autodesk\r\nimport RevitServices\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, IndependentTag,BuiltInParameter, BuiltInCategory, ElementTransformUtils, FamilyInstance\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom Autodesk.Revit.DB import Dimension, ViewType, XYZ, ViewPlan, ElementId, Electrical\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\n\r\n# For Outputting print to watch node\r\noutput = StringIO()\r\nsys.stdout = output\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nactive_view = doc.ActiveView\r\n\r\ndef transaction(func):\r\n    def wrapper(*args, **kwargs):\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n            func(*args, **kwargs)\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n    return wrapper\r\n\r\ndef print_member(obj):\r\n  for i in dir(obj):\r\n      print(i)\r\n\r\ndef get_element(id):\r\n  if isinstance(id, str):\r\n    return doc.GetElement(ElementId(id))\r\n  elif isinstance(id, ElementId):\r\n    return doc.GetElement(id)\r\n  return None\r\n\r\ndef get_element_via_parameter(elements, parameter_name, parameter_value):\r\n    result = []\r\n    for el in elements:\r\n        param_ViewType = el.GetParameters(parameter_name)[0]\r\n        if param_ViewType.AsValueString() == parameter_value:\r\n            result.append(el)\r\n            continue\r\n    return result\r\n\r\nview_type = ViewType.FloorPlan\r\n# view_type = ViewType.CeilingPlan\r\n\r\nview_discipline = \"Electrical\"\r\n# view_subdiscipline = \"Lighting\"\r\nview_subdiscipline = \"Power\"\r\n\r\ntarget_id = \"1363645\"\r\n\r\n@transaction \r\ndef start():\r\n  base_floor = get_element(target_id)\r\n  cb = base_floor.CropBox\r\n  print(cb)\r\n  \r\n  collector = FilteredElementCollector(doc).OfClass(ViewPlan)\r\n  floor_plan_views = [view for view in collector if isinstance(view, ViewPlan) and view.ViewType == view_type]\r\n  for view in floor_plan_views:\r\n    if view.IsTemplate == True:\r\n      print(\"This is a template: \", view.Name)\r\n      continue\r\n    # Discipline\r\n    disci = view.LookupParameter(\"Discipline\")\r\n    if disci.AsValueString() != view_discipline: continue\r\n\r\n    # Subdiscipline\r\n    subdisci = view.LookupParameter(\"Sub-Discipline\")\r\n    if subdisci.AsValueString() != view_subdiscipline: continue\r\n\r\n    view.CropBox = cb\r\n    view.CropBoxActive = True\r\n    print(view.Name)\r\n    # break\r\n\r\nstart()\r\n\r\nOUT = output.getvalue()   ",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ebb23ebc16634eb5bf98101547fb9c60",
      "Inputs": [
        {
          "Id": "063111aa5b85478f8ce3613af40f3585",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70beaf33496b45a0ada062df788e3686",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "818bd430c0474b3eae470302362c6684",
      "Inputs": [
        {
          "Id": "ee5437cc162d46ad9bbcf164a150f5ee",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83db600642214d2ea34f3d18d2550703",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "cd18fa60d0fa4a11acb2dff20d23a7b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee9779bc3e604e92a61da20e89ed7f77",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    }
  ],
  "Connectors": [
    {
      "Start": "70beaf33496b45a0ada062df788e3686",
      "End": "ee5437cc162d46ad9bbcf164a150f5ee",
      "Id": "1099c0b3a6ec4c6ba3b269955d0ce292",
      "IsHidden": "False"
    },
    {
      "Start": "ee9779bc3e604e92a61da20e89ed7f77",
      "End": "063111aa5b85478f8ce3613af40f3585",
      "Id": "33044cbf317d45858e25542ec14f01b3",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "ebb23ebc16634eb5bf98101547fb9c60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 113.05795068352566,
        "Y": 120.94849823869734
      },
      {
        "Id": "818bd430c0474b3eae470302362c6684",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Watch",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 456.09231506322135,
        "Y": 123.46351585172391
      },
      {
        "Id": "cd18fa60d0fa4a11acb2dff20d23a7b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -192.43066103794939,
        "Y": 48.6331433826267
      }
    ],
    "Annotations": [],
    "X": 97.508539846599433,
    "Y": 77.489414506385884,
    "Zoom": 0.87323933894951833
  }
}