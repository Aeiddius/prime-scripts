{
  "Uuid": "d3729592-126c-4263-96c7-1ee70d6622dc",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Group Model Duplicator",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "base_plan = \"2442306\";\n // LEVEL 4A;\n\nplans = [\n\t\"2442315\", // LEVEL 5A\n\t\"2442324\", // LEVEL 6A\n\t\"2442333\", // LEVEL 7A\n\t\"2442342\", // LEVEL 8A\n\t\"2442351\", // LEVEL 9A\n\t\"2442360\", // LEVEL 10A\n\t\"2442369\", // LEVEL 11A\n\t\"2442378\", // LEVEL 12A\n\t\"2442387\", // LEVEL 13A\n\t\"2442396\", // LEVEL 14A\n\t\"2442405\", // LEVEL 15A\n\t\"2442414\", // LEVEL 16A\n\t\"2442423\", // LEVEL 17A\n\t\"2442432\", // LEVEL 18A\n\t\"2442441\", // LEVEL 19A\n\t\"2442450\", // LEVEL 20A\n\t\"2442459\", // LEVEL 21A\n\t\"2442468\", // LEVEL 22A\n\t\"2442477\", // LEVEL 23A\n\t\"2442486\", // LEVEL 24A\n\t\"2442495\", // LEVEL 25A\n\t\"2442504\", // LEVEL 26A\n\t\"2442513\", // LEVEL 27A\n\t\"2442522\", // LEVEL 28A\n\t\"2442531\", // LEVEL 29A\n\t\"2442540\", // LEVEL 30A\n\t\"2442549\" // LEVEL 31A\n];",
      "Id": "1c6fb072aec74208811b5f7fdf626b80",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c22e46e3aa5e484d98995be43e8f9ed0",
          "Name": "",
          "Description": "base_plan",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa036ea10b214a0faf1ef4ea022cd448",
          "Name": "",
          "Description": "plans",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport math\r\nfrom io import StringIO\r\n\r\nimport Autodesk\r\nimport RevitServices\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, IndependentTag,BuiltInParameter, BuiltInCategory, ElementTransformUtils\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom Autodesk.Revit.DB import Dimension, Line, XYZ, Group, ElementId\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\n\r\n# For Outputting print to watch node\r\noutput = StringIO()\r\nsys.stdout = output\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nactive_view = doc.ActiveView\r\n\r\ndef transaction(func):\r\n    def wrapper(*args, **kwargs):\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n            func(*args, **kwargs)\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n    return wrapper\r\n \r\ndef print_member(obj):\r\n  for i in dir(obj):\r\n      print(i)\r\n\r\ndef get_element(id_str):\r\n   return doc.GetElement(ElementId(id_str))\r\n\r\ndef copy_to_plan(base_plan, t_plan):\r\n  elements_in_source_view = FilteredElementCollector(doc, base_plan.Id).WhereElementIsNotElementType().ToElements()\r\n\r\n  processed_elems = []\r\n\r\n  for e in elements_in_source_view:\r\n    category = e.Category\r\n\r\n    if not category or (category and category.Id.IntegerValue in exception_categories):\r\n      continue\r\n    \r\n    processed_elems.append(e.Id)\r\n    print(f'[{e.Name}], [{e.Id}]')\r\n\r\n  filtered = List[ElementId](processed_elems)\r\n\r\n  copied_element = ElementTransformUtils.CopyElements(base_plan, filtered, t_plan, Transform.Identity, CopyPasteOptions())\r\n  print(\"Copied Elements: \", copied_element)\r\n\r\ndef delete_group_plan(t_plan):\r\n    elems = FilteredElementCollector(doc, t_plan.Id).OfCategory(BuiltInCategory.OST_IOSModelGroups).ToElements()\r\n    for i in elems:\r\n       doc.Delete(i.Id)\r\n\r\n\r\nmode = UnwrapElement(IN[0])\r\nproceed = UnwrapElement(IN[1])\r\nbase_plan_id = UnwrapElement(IN[2])\r\ntarget_plans = UnwrapElement(IN[3])\r\n\r\n# 2680980\r\n\r\nexception_categories = [\r\n   int(BuiltInCategory.OST_RvtLinks),\r\n   int(BuiltInCategory.OST_Grids),\r\n   int(BuiltInCategory.OST_SectionBox),\r\n   int(BuiltInCategory.OST_Cameras),\r\n   int(BuiltInCategory.OST_Elev),\r\n   int(BuiltInCategory.OST_Viewers),\r\n]\r\n\r\n@transaction \r\ndef start():\r\n  print(\"Current Mode: \", mode)\r\n  base_plan = get_element(base_plan_id)\r\n  target_plans_elems = [get_element(e) for e in target_plans]\r\n  if mode == \"Delete\":\r\n    for tar_plan in target_plans_elems:\r\n      delete_group_plan(tar_plan)\r\n\r\n  elif mode == \"Copy\":\r\n    for tar_plan in target_plans_elems:\r\n      copy_to_plan(base_plan, tar_plan)\r\n\r\n\r\nif proceed:\r\n  print(\"Starting Script\")\r\n  start()\r\nelse:\r\n  print(\"Script not enabled\")\r\n\r\nOUT = output.getvalue()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fda493ea90a9487684efde4a19db534c",
      "Inputs": [
        {
          "Id": "bee3aa5ba5e84e3ebf816afc6c5b95b6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ce5ff743dc74ae493575b4962c3482b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f7b33dd695b4d82919b81ebae9bd6ca",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12a4f7bb4b6546a3a9a6cc667187de6d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6a0e0a144c74286a9f6f0e4e45ef2bb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "85d9ce72712e4c309d0eb43a7a97cac5",
      "Inputs": [
        {
          "Id": "ede07aa50bff46828733851df7b30cdc",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a686432b60264cf7be5084d2719f54b9",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "4c643442288f4851a16977db503a19fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "125ebcaf48484fdda671cd3139ffd8eb",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "44b5fc734eae49a29365190e8aa35d5c",
      "Inputs": [
        {
          "Id": "87b3ef06204940aeb787b7f42076fe95",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06a1f858d23a401ba58c1e3dce35eeed",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4c5efb543764678bc0b72bcf9c83c2c",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "1c50e8064121465c9c7717cf6220f380",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbfdde068c9c4fe7bb0018cfd55d02d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eac387f8b97a4089a2db57a7f6c6fa3f",
      "Inputs": [
        {
          "Id": "05e171d047e6404084866d95151f1ecf",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f18a033e11147e5841706990bfb15ee",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport math\r\nfrom io import StringIO\r\n\r\nimport Autodesk\r\nimport RevitServices\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB import ViewType\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, Dimension\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom Autodesk.Revit.DB import Dimension, Line, XYZ, Level\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\n\r\n# For Outputting print to watch node\r\noutput = StringIO()\r\nsys.stdout = output\r\nresult = []\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef transaction(func):\r\n    def wrapper(*args, **kwargs):\r\n            TransactionManager.Instance.EnsureInTransaction(doc)\r\n            func(*args, **kwargs)\r\n            TransactionManager.Instance.TransactionTaskDone()\r\n    return wrapper\r\n \r\ndef print_member(obj):\r\n  for i in dir(obj):\r\n      print(i)\r\n\r\ndef get_element_via_parameter(elements, parameter_name, parameter_value):\r\n    result = []\r\n    for el in elements:\r\n        param_ViewType = el.GetParameters(parameter_name)[0]\r\n        if param_ViewType.AsValueString() == parameter_value:\r\n            result.append(el)\r\n            continue\r\n    return result\r\n\r\n\r\ndef get_all_view_type(elements, view_type):\r\n    result = []\r\n    for el in elements:\r\n        if el.ViewType == view_type:\r\n            result.append(el)\r\n    return result\r\n\r\nplan_dict = {\r\n    \"Floor Plan\": ViewType.FloorPlan,\r\n    \"Ceiling Plan\": ViewType.CeilingPlan\r\n}\r\n\r\nfamily_dict = {\r\n    \"Floor Plan\": ViewFamily.FloorPlan,\r\n    \"Ceiling Plan\": ViewFamily.CeilingPlan\r\n}\r\n\r\nto_print = UnwrapElement(IN[0])\r\nelements = UnwrapElement(IN[1])\r\n\r\n@transaction\r\ndef start():\r\n  target_levels = UnwrapElement(IN[0])\r\n\r\n  print(f\"To print: {to_print}\\n\")\r\n  if to_print == \"Level\":\r\n    # Get all levels in the document\r\n    collector = FilteredElementCollector(doc).OfClass(Level)\r\n    levels = collector.ToElements()\r\n\r\n    # Create a list of level names\r\n    for level in levels:\r\n      print(f'\"{level.Id.ToString()}\", // {level.Name}')\r\n\r\n  # Print all plan\r\n  elif to_print == \"Plan\":\r\n    discipline_type = \"Electrical\"\r\n    plan_type = \"Ceiling Plan\"\r\n    elem_discipline = get_element_via_parameter(elements, \"Discipline\", discipline_type)\r\n    elem_plan = get_all_view_type(elem_discipline, plan_dict[plan_type])\r\n    for plan in elem_plan:\r\n      print(f'\"{plan.Id}\", // {plan.Name}')\r\n\r\n\r\nstart()\r\n\r\nOUT = result\r\nOUT = output.getvalue()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8b800cc5e0c84cb6ade8cf266d48a25a",
      "Inputs": [
        {
          "Id": "24a2748ef1744c6f8ef14ed4d8ccfa99",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c6f6f51e3b74f2fa041d980db34d80d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "349148c3b4e54de9ac6c11f88c5f1b22",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "915f905805754371aef7a58e87771755",
      "Inputs": [
        {
          "Id": "ceb37c3979874661a32083ee7c4ebed8",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1779c79a8a3547709cc842d3a97c7db4",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 717,
      "SelectedString": "OST_Views",
      "NodeType": "ExtensionNode",
      "Id": "a31f81463f85492ba879320ff34b8c84",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06ade70fbdac472282eb3f71122cf4fd",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level\";\n\"Plan\";",
      "Id": "3bef5bf514ec4c5a8cd24cf8c8729250",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c81a7b609eb34187b1baef4597d4d90e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a28d0bf403094585a64cdea355aecc55",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Copy\";\n\"Delete\";",
      "Id": "e61562491fac453e80e402385c75e078",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b7e2e9e4cf0040c389d22a14d95546b4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "500ce0523fe24435a5dce1c86163b72c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "c22e46e3aa5e484d98995be43e8f9ed0",
      "End": "9f7b33dd695b4d82919b81ebae9bd6ca",
      "Id": "172016c1eda943f793c7f77fb5e785d8",
      "IsHidden": "False"
    },
    {
      "Start": "fa036ea10b214a0faf1ef4ea022cd448",
      "End": "12a4f7bb4b6546a3a9a6cc667187de6d",
      "Id": "78b3f7084db04e7786045e4be5991286",
      "IsHidden": "False"
    },
    {
      "Start": "c6a0e0a144c74286a9f6f0e4e45ef2bb",
      "End": "ede07aa50bff46828733851df7b30cdc",
      "Id": "295a2ea6be5445f29118a40d7e35d237",
      "IsHidden": "False"
    },
    {
      "Start": "125ebcaf48484fdda671cd3139ffd8eb",
      "End": "4ce5ff743dc74ae493575b4962c3482b",
      "Id": "ba76c5052f72413ca2d98a0b49eba72e",
      "IsHidden": "False"
    },
    {
      "Start": "e4c5efb543764678bc0b72bcf9c83c2c",
      "End": "0c6f6f51e3b74f2fa041d980db34d80d",
      "Id": "af9d4d30501e488283fe4c1b7111bf6c",
      "IsHidden": "False"
    },
    {
      "Start": "fbfdde068c9c4fe7bb0018cfd55d02d6",
      "End": "06a1f858d23a401ba58c1e3dce35eeed",
      "Id": "c6507a941f514dae9282cf14b4c7a97f",
      "IsHidden": "False"
    },
    {
      "Start": "349148c3b4e54de9ac6c11f88c5f1b22",
      "End": "05e171d047e6404084866d95151f1ecf",
      "Id": "61501d50c7024c43ac382df32c5feb1c",
      "IsHidden": "False"
    },
    {
      "Start": "1779c79a8a3547709cc842d3a97c7db4",
      "End": "87b3ef06204940aeb787b7f42076fe95",
      "Id": "ab59b57e743a4446b9dc258555a6d784",
      "IsHidden": "False"
    },
    {
      "Start": "06ade70fbdac472282eb3f71122cf4fd",
      "End": "ceb37c3979874661a32083ee7c4ebed8",
      "Id": "22d723dcccf5478db7b8f78a36f9f780",
      "IsHidden": "False"
    },
    {
      "Start": "a28d0bf403094585a64cdea355aecc55",
      "End": "24a2748ef1744c6f8ef14ed4d8ccfa99",
      "Id": "dd891b5aa3e24e698a3482ec67e69e0b",
      "IsHidden": "False"
    },
    {
      "Start": "b7e2e9e4cf0040c389d22a14d95546b4",
      "End": "bee3aa5ba5e84e3ebf816afc6c5b95b6",
      "Id": "279292b8f80d49d7b7be3be23839dad4",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Target Plans (Ceiling)",
        "ShowGeometry": true,
        "Id": "1c6fb072aec74208811b5f7fdf626b80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 53.700123027326526,
        "Y": 85.167503075683157
      },
      {
        "Name": "Plan Copy.py",
        "ShowGeometry": true,
        "Id": "fda493ea90a9487684efde4a19db534c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 703.2959050684949,
        "Y": 175.55219106195955
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "85d9ce72712e4c309d0eb43a7a97cac5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 989.17754437845042,
        "Y": 93.817425620644912
      },
      {
        "Name": "Proceed?",
        "ShowGeometry": true,
        "Id": "4c643442288f4851a16977db503a19fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 385.16431294571169,
        "Y": 13.655600924280236
      },
      {
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Id": "44b5fc734eae49a29365190e8aa35d5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 494.91792379385288,
        "Y": 1157.1368859463516
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1c50e8064121465c9c7717cf6220f380",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 317.77534238423959,
        "Y": 1280.2916167169317
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "eac387f8b97a4089a2db57a7f6c6fa3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1097.5492025689505,
        "Y": 792.98576659920172
      },
      {
        "Name": "Level Printer.py",
        "ShowGeometry": true,
        "Id": "8b800cc5e0c84cb6ade8cf266d48a25a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 820.9471930137197,
        "Y": 913.68080291297179
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "915f905805754371aef7a58e87771755",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4.19038799320856,
        "Y": 1164.4007422293917
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "a31f81463f85492ba879320ff34b8c84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -364.85166641981846,
        "Y": 1168.3748662548217
      },
      {
        "Name": "Which to Print?",
        "ShowGeometry": true,
        "Id": "3bef5bf514ec4c5a8cd24cf8c8729250",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 505.70364397837557,
        "Y": 892.66523613701179
      },
      {
        "Name": "Mode",
        "ShowGeometry": true,
        "Id": "e61562491fac453e80e402385c75e078",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 451.4317181812288,
        "Y": -158.897129687202
      }
    ],
    "Annotations": [
      {
        "Id": "baaf6486ccc8424cb5363ae99c32f93c",
        "Title": "Get All Elements",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a31f81463f85492ba879320ff34b8c84",
          "915f905805754371aef7a58e87771755",
          "1c50e8064121465c9c7717cf6220f380",
          "44b5fc734eae49a29365190e8aa35d5c"
        ],
        "HasNestedGroups": false,
        "Left": -374.85166641981846,
        "Top": 1084.1368859463516,
        "Width": 1116.7695902136713,
        "Height": 328.15473077058004,
        "FontSize": 36.0,
        "InitialTop": 1157.1368859463516,
        "InitialHeight": 268.15473077058004,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 457.36945908399827,
    "Y": 139.17218303036771,
    "Zoom": 0.42731131081167661
  }
}